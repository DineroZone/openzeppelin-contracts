module.exports = length => [
    `    /**`,
    `     * @dev Returns the downcasted int${length} from int256, reverting on`,
    `     * overflow (when the input is less than smallest int${length} or`,
    `     * greater than largest int${length}).`,
    `     *`,
    `     * Counterpart to Solidity's \`int${length}\` operator.`,
    `     *`,
    `     * Requirements:`,
    `     *`,
    `     * - input must fit into ${length} bits`,
    `     *`,
    `     * _Available since v3.1._`,
    `     */`,
    `    function toInt${length}(int256 value) internal pure returns (int${length}) {`,
    `        require(value >= type(int${length}).min && value <= type(int${length}).max, "SafeCast: value doesn't fit in ${length} bits");`,
    `        return int${length}(value);`,
    `    }`,
].join('\n');